// Author: Nigel Finley. August 2016. UT BOOTCAMP HW Assignment


//  1. LOOK at the following class excersises to help with this: Captain planet (animate and putting stuff on screen - bootstrap buttons)
// ...also the fridge game for data let to pass letters and the crystal game to assign numbers and use counters. Also calculator game from 4.3
//  2. How to display the characters
// 3. Use Materialize for the btns


// Variables

// Overall game is stored in object
characterArrayList = [
    // 1.  An array or object of possible characters properties would incldue 
    // name, picture, Health Points, Attack Power and counter attack power

    {
        name: 'Luke SkyWalker',
        visual: 'assets/images/luke.jpg',
        healthPoints: 160, 
        attackPower: 8,
        counterAttackPower: 20,
    },
    {
        name: 'Yoda',
        visual: 'assets/images/yoda.jpg', 
        healthPoints: 130,
        attackPower: 15,
        counterAttackPower: 30,
    },
    {
        name: 'Less Ray',
        visual: 'assets/images/lessray.jpg',
        healthPoints: 180, 
        attackPower: 5,
        counterAttackPower: 15,
    },
    {
        name: 'Darth Vader',
        visual: 'assets/images/darth.jpg',
        healthPoints: 180,
        attackPower: 15,
        counterAttackPower: 25,
    },
    {
        name: 'Kylo Wren',
        visual: 'assets/images/kylowren.jpg',
        healthPoints: 110,
        attackPower: 6,
        counterAttackPower: 15,
    },
   	{
        name: 'Darth Maul',
        visual: 'assets/images/darthmaul.jpg',
        healthPoints: 165,
        attackPower: 12,
        counterAttackPower: 24,
    }
   //     {
   //      name: 'Obi-Wan Kanobi',
   //      visual: 'assets/images/obiwan.jpg',
   //      healthPoints: 120, 
   //      attackPower: 10, 
   //      counterAttackPower: 24,
   //  	},


    //  {
    //     name: 'Boba Fett',
    //     visual: 'assets/images/bobafett.jpg',
    //     healthPoints: 90,
    //     attackPower: 25,
    //     counterAttackPower: 26,
    // },


];

// Initialize the attack btn to false so it cannot be clicked until true
// var attackBtn = false;
// 
// game play object houses all functions  and additional variables of the game
gamePlayObj = {
	// Initializes game start true
	gameStart: true,
// 2. your charater Create an array of the objects above. This will be generated by an 
// on click event. 
	yourCharacter:[],

// // 3. after your character is picked a new array of enemies to attack is created based
// // initialize emenies to attack attack array
	enemiesArray: [],

	// c : characterArrayList,
	// enemiesArray:  [c.yoda, c.darthVader],
// // 4. once the user picks their character via on click their enemies it stores this value in a object
	yourEnemy: [],

// current attack power would store the returned value of the function attack power math
	// currentAttackPower: attackPowerMath,

// // create a function that calculate the current attack power
	// attackPowerMath :  function () {},
	// Math calcualtion to increase the attack power by itself every time attack button clicked


// create an array of battle sounds
	battleSoundsArray: ['assets/audio/saberclash.mp3', 'assets/audio/saberclash1.mp3', 'assets/audio/saberclash2.mp3', 'assets/audio/saberclash3.mp3', 'assets/audio/saberclash4.mp3', 'assets/audio/saberclash5.mp3', 'assets/audio/saberclash6.mp3', 'assets/audio/spin1.mp3', 'assets/audio/spin2.mp3','assets/audio/spin3.mp3','assets/audio/spin4.mp3','assets/audio/spin5.mp3','assets/audio/spin6.mp3', 'assets/audio/swing1.mp3','assets/audio/swing2.mp3', ],

// picks at random battle sound when the attack button is pressed
	battleSoundPick: function() {
        return this.battleSoundsArray[Math.floor(Math.random() * this.battleSoundsArray.length)];
    },

// create a variable to house the winning sound

// create a variable to house the losing sound
// console log the entire array of characters
	logCharacters: function(){
	for (var i = 0; characterArrayList.length > i; i++) {
		console.log(characterArrayList[i]);
	}
 },

// Note object contains the following properties 'array' which has a value of characterArrayList which has the properties of name, visual and healthpoints from character array list
// Function displays all of the characters on the screen
	loopThroughChar: function(object){
		object.array.forEach(function(character, index, arr){
			var parent = document.getElementById("characterList");
			console.log(parent);
			var div  = document.createElement('div');
			div.setAttribute('class', 'characterContainer characterClick');
			parent.appendChild(div);

			// create an element p
			var pname = document.createElement("p");
			// within the p append object name
			div.appendChild(pname);

			// Insert the name of the character
			var characterName = document.createTextNode(characterArrayList[index].name);
			// writes this name of character to the screen
			pname.appendChild(characterName);
				
			// create image and append to li
			var img = document.createElement('img');
				// within img append with object visual
			div.appendChild(img);
			// setting the image attribute to pull from the array of objects
			img.setAttribute('src', characterArrayList[index].visual);  

			// createing another p element
			var hp = document.createElement("p");
			// appending it to the div
			div.appendChild(hp);
			// 
			// Append the p and add the health points 
			var characterHealthPoints = document.createTextNode(characterArrayList[index].healthPoints);
			hp.appendChild(characterHealthPoints);

		});
	}

}



// STAGE 1: Initial Setup/ Display
// Sections to be initiallially displayed on the screen (DSIPLAY HEADER): 
// load the page and displays the list of characters
$(document).ready(function(){
	// gets the link for the theme song to be played in the background
	 // var audioElement = document.createElement('audio');
	 // audioElement.autoplay = true;
	 // audioElement.loop = true;
  //    audioElement.setAttribute('src', 'assets/audio/starwars.m4a');
 
	// 1. Display all characters available on the top of the screen
		var object = {
			array: characterArrayList
		 }
		
		gamePlayObj.loopThroughChar(object);

		});
	// First select character
	$('#characterArrayList').on('click', function(event){
		// needs to select the object from the array and then store it in the yourCharacter array

		// then needs to take remaining characters and display them in the enemies section

		// then needs to take the yourCharacter array and display it in the 'your Jedi' section

		// then it needs to take

	});

	// second select your enemy with on click event

	$('#enemyList').on('click', function(event){


	});

		// 2. Have a 'Your Character' section below the characters available - written in HMTML

		// 3. Have an empty section designated to where your character will go <div> - html
		// Using .on('click') 

		// 4. Have a 'Enemies to attack' header below 'Your character' div section - html
		// 5. The space below 'emenies' will dynamically update to display non-character choices  - jquery
		// 5. Put a 'Fight Section'  which houses the 'Attack' Button  - html
		// 6. Have a 'Defender section' - html
		// 7. Under this the enemy chosen character will be dynamically displayed jQuery
		// 8. Points section  - <div class='gameAttackText'> then inside:
			 //  - dynamically create elements and assign them ids which will display result text
		// 8. Audio tags ( backround music, attack noises, defeated noise, win sound) - jQuery
		// 9. Add background image
		// Final: Spice up the page using Bootstrap	



// Initial Game Play
	// $(document).ready function
	// Page loads and displays all of the elements listed above, music begins (create an audio element using document.createElement('audio') that starts the music)
		// 1. Throw a modal using bootstrap on page with message and button that says Battle user click
			// Use bootrap to code this in the html
		// 2. User clicks their character
			// On click function to select the character and then move it to the 'Your character' section using jQuery and background color remains
			// Assign this character to the yourCharacterObj
			// then rest of characters move to Enemies avaible to attack' using query 
				// update background color of enemies available to red using .attr('.background-color', 'red')
			
		// 3. User then selects their enemy
			 // on click 'Enemies Available to Attack' to select enemy then it moves selected enemy 
			 // ....to the 'Defender' section and is removed from the 'Enemies to attack section'
			 	// update background color to black using .attr('.background-color', 'black')
			 // Assign this enemy to the yourEnemyObj 

		// 4. Once both your character and enemy is chosen set the AUDIO to saberon.mp3
		// 5. Now the user is able to click the Attack Button (needs to be set to null until this set happens)
			 	

// Attack Game Play
	// User click attack
		// on click function that call up yourCharacterObj and yourEnemyObj to fight
		// Attack Button when clicked: 
			// 1. You attack  using your attackPower which increases by inital state everytime attack is clicked (ie. 8, 16, 24) it decreases emeny
			// ...healthPoints by that same incremental value everytime
				// ON SCREEN: needs to dynamically update enemy HP points to reflect your attack
				// Scenario (me obi vs enemy less):
					// Obi attack at 8 reduces Less's health points by 8. For every subsitquential attack, Obi's attack power increases by factor of 8 and 
					// ...Less's health points decreases by a factor of 8
			// 2. Your enemy attacks and it reduces your character health points by enemies counterAttackPower value 
				// ON SCREEN: needs to dynamically update your character HP points by a factor of your enemies counter attack power
			// 3. After you click attack it also displays the gameAttackText which shows something like:
						//"You attacked " + yourEnemyObj.name + "for " + yourCharacterObj.currentAttackPower + " damange", 
						// yourEnemyObj.name + " counter attacked damaging your health by " + yourEnemyObj.counterAttackPower  
			// 4. Add attack button Audio for each click (look at capitain planet example and look at hangman to pull a random sound from the battle sounds array)
			// 5. User continues to press Attack Button until either you or your enemies HP is equal to or less than 0
			// 6. Win Scenario: Occurs when your enemy health points are < = 0(first part of if)
					// if(yourEnemyObj.healthPoints <= 0 ){}
						// Actions based on this: 
						 // 1. remove defender image from page using .empty() and also remove this enemy from enemy array so it can't be selected again (use code from hangman game)
						 // 2. Display the game text (#gameAttackText) using .html,"You have defeated " + yourEnemyObj.name + ", choose another enemy to fight!"
						 // 3. Reset enemy yourEnemyObj; to allow to user allow user to click new enemy, this would take back to initial game.3
						 // 4. Add win audio under this scenario
						 // 5. If user continues to press attack button it displays the text "No enemy to fight, select an enemy."
						//  4. IF there are no enemies left game is over and user has WON whole game (if (enimiesArray == -1))
								// Actions: 
									// 1. Play win sound (or not)
									// 2. Display text You Won!! The FORCE is with you! GAME OVER!!
									// 3. Dynamically display a 'Batle Again!' button which resets the game to its original display state

			// 	7. Loss Scenario: occurs when your health points is < = 0
					// else if (yourCharacterObj.healthPoints <= 0)
						// Actions: 
							// 1. Display text " yourEnemyArray.name + "has defeated you! Game Over! 
							// 2. Dynamically display a 'Batle Again!' button which resets the game to its original display state
			
		




